{"protocolVersion":"0.1.1","runnerVersion":"1.26.2","pid":63426,"type":"start","time":0}
{"suite":{"id":0,"platform":"vm","path":"test/multi_step_tool_calling_test.dart"},"type":"suite","time":0}
{"test":{"id":1,"name":"loading test/multi_step_tool_calling_test.dart","suiteID":0,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":0}
{"count":1,"time":4,"type":"allSuites"}
{"testID":1,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":458}
{"group":{"id":2,"suiteID":0,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":5,"line":null,"column":null,"url":null},"type":"group","time":459}
{"test":{"id":3,"name":"(setUpAll)","suiteID":0,"groupIDs":[2],"metadata":{"skip":false,"skipReason":null},"line":10,"column":3,"url":"file:///Users/csells/Code/dartantic_ai/test/multi_step_tool_calling_test.dart"},"type":"testStart","time":459}
{"testID":3,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":465}
{"group":{"id":4,"suiteID":0,"parentID":2,"name":"Multi-step tool calling","metadata":{"skip":false,"skipReason":null},"testCount":5,"line":17,"column":3,"url":"file:///Users/csells/Code/dartantic_ai/test/multi_step_tool_calling_test.dart"},"type":"group","time":466}
{"group":{"id":5,"suiteID":0,"parentID":4,"name":"Multi-step tool calling Performance","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":94,"column":5,"url":"file:///Users/csells/Code/dartantic_ai/test/multi_step_tool_calling_test.dart"},"type":"group","time":466}
{"test":{"id":6,"name":"Multi-step tool calling Performance should complete multi-step calls within reasonable time","suiteID":0,"groupIDs":[2,4,5],"metadata":{"skip":false,"skipReason":null},"line":95,"column":7,"url":"file:///Users/csells/Code/dartantic_ai/test/multi_step_tool_calling_test.dart"},"type":"testStart","time":466}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:36.996350: [LangchainWrapper] Attempting to parse tool call from: \"TOOL_CALL: {\"name\": \"get_current_time\", \"args\": {}}\"","type":"print","time":1787}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:36.999953: [LangchainWrapper] Extracted JSON string: \"{\"name\": \"get_current_time\", \"args\": {}}\"","type":"print","time":1788}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:37.000150: [LangchainWrapper] Successfully parsed tool call: get_current_time","type":"print","time":1788}
{"testID":3,"messageType":"print","message":"FINE: 2025-06-25 23:47:37.001911: [LangchainWrapper] Tool get_current_time executed: {datetime: 2025-06-20T12:00:00Z, timestamp: 1718888400}","type":"print","time":1788}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:38.597527: [LangchainWrapper] Attempting to parse tool call from: \"The current date and time is June 20, 2025, at 12:00 PM UTC. Let's find events for this date and get details for the first event listed. \n\nTOOL_CALL: {\"name\": \"find_events\", \"args\": {\"date\": \"2025-06-20\"}}\"","type":"print","time":3385}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:38.598222: [LangchainWrapper] Extracted JSON string: \"{\"name\": \"find_events\", \"args\": {\"date\": \"2025-06-20\"}}\"","type":"print","time":3386}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:38.598405: [LangchainWrapper] Successfully parsed tool call: find_events","type":"print","time":3386}
{"testID":3,"messageType":"print","message":"FINE: 2025-06-25 23:47:38.600017: [LangchainWrapper] Tool find_events executed: {events: [{id: event1, title: Morning Meeting, time: 09:00}, {id: event2, title: Lunch with team, time: 12:30}]}","type":"print","time":3386}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:40.536495: [LangchainWrapper] Attempting to parse tool call from: \"On June 20, 2025, there are events scheduled as follows:\n\n1. **Morning Meeting** at 09:00 AM\n2. **Lunch with team** at 12:30 PM\n\nNow, I'll get the details for the first event, \"Morning Meeting.\"\n\nTOOL_CALL: {\"name\": \"get_event_details\", \"args\": {\"event_id\": \"event1\"}}\"","type":"print","time":5323}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:40.536886: [LangchainWrapper] Extracted JSON string: \"{\"name\": \"get_event_details\", \"args\": {\"event_id\": \"event1\"}}\"","type":"print","time":5324}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:40.537066: [LangchainWrapper] Successfully parsed tool call: get_event_details","type":"print","time":5324}
{"testID":3,"messageType":"print","message":"FINE: 2025-06-25 23:47:40.537935: [LangchainWrapper] Tool get_event_details executed: {event_id: event1, title: Morning Meeting, description: Weekly team standup meeting, attendees: [alice@example.com, bob@example.com], location: Conference Room A}","type":"print","time":5325}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:42.258267: [LangchainWrapper] Attempting to parse tool call from: \"For June 20, 2025, the first event is the **Morning Meeting**, which is scheduled at 09:00 AM. Here are the details:\n\n- **Description**: Weekly team standup meeting\n- **Attendees**: Alice (alice@example.com), Bob (bob@example.com)\n- **Location**: Conference Room A\n\nIf you need further information or assistance, feel free to ask!\"","type":"print","time":7045}
{"testID":6,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7055}
{"group":{"id":7,"suiteID":0,"parentID":4,"name":"Multi-step tool calling Tool Calling Mode","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":124,"column":5,"url":"file:///Users/csells/Code/dartantic_ai/test/multi_step_tool_calling_test.dart"},"type":"group","time":7057}
{"group":{"id":8,"suiteID":0,"parentID":7,"name":"Multi-step tool calling Tool Calling Mode OpenAI Model","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":129,"column":7,"url":"file:///Users/csells/Code/dartantic_ai/test/multi_step_tool_calling_test.dart"},"type":"group","time":7058}
{"test":{"id":9,"name":"Multi-step tool calling Tool Calling Mode OpenAI Model should call multiple tools in multi-step mode","suiteID":0,"groupIDs":[2,4,7,8],"metadata":{"skip":false,"skipReason":null},"line":130,"column":9,"url":"file:///Users/csells/Code/dartantic_ai/test/multi_step_tool_calling_test.dart"},"type":"testStart","time":7058}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:43.315864: [LangchainWrapper] Attempting to parse tool call from: \"TOOL_CALL: {\"name\": \"get_current_time\", \"args\": {}}\"","type":"print","time":8103}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:43.316206: [LangchainWrapper] Extracted JSON string: \"{\"name\": \"get_current_time\", \"args\": {}}\"","type":"print","time":8103}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:43.316349: [LangchainWrapper] Successfully parsed tool call: get_current_time","type":"print","time":8104}
{"testID":3,"messageType":"print","message":"FINE: 2025-06-25 23:47:43.316588: [LangchainWrapper] Tool get_current_time executed: {datetime: 2025-06-20T12:00:00Z, timestamp: 1718888400}","type":"print","time":8104}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:44.742273: [LangchainWrapper] Attempting to parse tool call from: \"The current date and time is June 20, 2025, at 12:00 PM UTC. I will now check for any events you have scheduled for today. \n\nTOOL_CALL: {\"name\": \"find_events\", \"args\": {\"datetime\": \"2025-06-20\"}}\"","type":"print","time":9529}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:44.742572: [LangchainWrapper] Extracted JSON string: \"{\"name\": \"find_events\", \"args\": {\"datetime\": \"2025-06-20\"}}\"","type":"print","time":9529}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:44.742659: [LangchainWrapper] Successfully parsed tool call: find_events","type":"print","time":9530}
{"testID":3,"messageType":"print","message":"FINE: 2025-06-25 23:47:44.742835: [LangchainWrapper] Tool find_events executed: {events: [{id: event1, title: Morning Meeting, time: 09:00}, {id: event2, title: Lunch with team, time: 12:30}]}","type":"print","time":9530}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:49.248114: [LangchainWrapper] Attempting to parse tool call from: \"For today, June 20, 2025, you have the following events scheduled:\n\n1. **Morning Meeting** at 9:00 AM (this event has already occurred).\n2. **Lunch with team** at 12:30 PM.\n\nLet me know if you need more details about any of these events or additional assistance!\"","type":"print","time":14035}
{"testID":9,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":14040}
{"group":{"id":10,"suiteID":0,"parentID":7,"name":"Multi-step tool calling Tool Calling Mode Gemini Model","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":165,"column":7,"url":"file:///Users/csells/Code/dartantic_ai/test/multi_step_tool_calling_test.dart"},"type":"group","time":14042}
{"test":{"id":11,"name":"Multi-step tool calling Tool Calling Mode Gemini Model should call multiple tools in multi-step mode","suiteID":0,"groupIDs":[2,4,7,10],"metadata":{"skip":false,"skipReason":null},"line":166,"column":9,"url":"file:///Users/csells/Code/dartantic_ai/test/multi_step_tool_calling_test.dart"},"type":"testStart","time":14042}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:50.218303: [LangchainWrapper] Attempting to parse tool call from: \"TOOL_CALL: {\"name\": \"get_current_time\", \"args\": {}}\n\"","type":"print","time":15005}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:50.218572: [LangchainWrapper] Extracted JSON string: \"{\"name\": \"get_current_time\", \"args\": {}}\"","type":"print","time":15005}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:50.218708: [LangchainWrapper] Successfully parsed tool call: get_current_time","type":"print","time":15005}
{"testID":3,"messageType":"print","message":"FINE: 2025-06-25 23:47:50.219042: [LangchainWrapper] Tool get_current_time executed: {datetime: 2025-06-20T12:00:00Z, timestamp: 1718888400}","type":"print","time":15006}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:50.774885: [LangchainWrapper] Attempting to parse tool call from: \"TOOL_CALL: {\"name\": \"find_events\", \"args\": {\"date\": \"2025-06-20\"}}\n\"","type":"print","time":15561}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:50.775103: [LangchainWrapper] Extracted JSON string: \"{\"name\": \"find_events\", \"args\": {\"date\": \"2025-06-20\"}}\"","type":"print","time":15562}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:50.775186: [LangchainWrapper] Successfully parsed tool call: find_events","type":"print","time":15562}
{"testID":3,"messageType":"print","message":"FINE: 2025-06-25 23:47:50.775438: [LangchainWrapper] Tool find_events executed: {events: [{id: event1, title: Morning Meeting, time: 09:00}, {id: event2, title: Lunch with team, time: 12:30}]}","type":"print","time":15562}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:51.336671: [LangchainWrapper] Attempting to parse tool call from: \"OK. Today, June 20, 2025, you have two events:\n\n*   **Morning Meeting** at 09:00\n*   **Lunch with team** at 12:30\n\"","type":"print","time":16123}
{"testID":11,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":16124}
{"group":{"id":12,"suiteID":0,"parentID":4,"name":"Multi-step tool calling Conversation Context","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":199,"column":5,"url":"file:///Users/csells/Code/dartantic_ai/test/multi_step_tool_calling_test.dart"},"type":"group","time":16124}
{"test":{"id":13,"name":"Multi-step tool calling Conversation Context should maintain conversation history with tool results","suiteID":0,"groupIDs":[2,4,12],"metadata":{"skip":false,"skipReason":null},"line":200,"column":7,"url":"file:///Users/csells/Code/dartantic_ai/test/multi_step_tool_calling_test.dart"},"type":"testStart","time":16125}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:52.152891: [LangchainWrapper] Attempting to parse tool call from: \"TOOL_CALL: {\"name\": \"get_current_time\",\"args\": {}}\"","type":"print","time":16939}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:52.153148: [LangchainWrapper] Extracted JSON string: \"{\"name\": \"get_current_time\",\"args\": {}}\"","type":"print","time":16940}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:52.153209: [LangchainWrapper] Successfully parsed tool call: get_current_time","type":"print","time":16940}
{"testID":3,"messageType":"print","message":"FINE: 2025-06-25 23:47:52.153332: [LangchainWrapper] Tool get_current_time executed: {datetime: 2025-06-20T12:00:00Z, timestamp: 1718888400}","type":"print","time":16940}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:53.583494: [LangchainWrapper] Attempting to parse tool call from: \"The current date and time is June 20, 2025, at 12:00 PM UTC. Now, let's find events happening on this date.\n\nTOOL_CALL: {\"name\": \"find_events\", \"args\": {\"datetime\": \"2025-06-20T12:00:00Z\"}}\"","type":"print","time":18370}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:53.583748: [LangchainWrapper] Extracted JSON string: \"{\"name\": \"find_events\", \"args\": {\"datetime\": \"2025-06-20T12:00:00Z\"}}\"","type":"print","time":18370}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:53.583814: [LangchainWrapper] Successfully parsed tool call: find_events","type":"print","time":18371}
{"testID":3,"messageType":"print","message":"FINE: 2025-06-25 23:47:53.583967: [LangchainWrapper] Tool find_events executed: {events: [{id: event1, title: Morning Meeting, time: 09:00}, {id: event2, title: Lunch with team, time: 12:30}]}","type":"print","time":18371}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:54.993433: [LangchainWrapper] Attempting to parse tool call from: \"On June 20, 2025, there are two events scheduled:\n\n1. **Morning Meeting** at 09:00 AM\n2. **Lunch with team** at 12:30 PM\n\nIf you need more details about any of these events, please let me know!\"","type":"print","time":19780}
{"testID":13,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":19787}
{"group":{"id":14,"suiteID":0,"parentID":4,"name":"Multi-step tool calling Error Handling","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":258,"column":5,"url":"file:///Users/csells/Code/dartantic_ai/test/multi_step_tool_calling_test.dart"},"type":"group","time":19789}
{"test":{"id":15,"name":"Multi-step tool calling Error Handling should handle tool call errors gracefully","suiteID":0,"groupIDs":[2,4,14],"metadata":{"skip":false,"skipReason":null},"line":259,"column":7,"url":"file:///Users/csells/Code/dartantic_ai/test/multi_step_tool_calling_test.dart"},"type":"testStart","time":19789}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:56.124762: [LangchainWrapper] Attempting to parse tool call from: \"TOOL_CALL: {\"name\": \"failing_tool\", \"args\": {}}\"","type":"print","time":20911}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:56.125098: [LangchainWrapper] Extracted JSON string: \"{\"name\": \"failing_tool\", \"args\": {}}\"","type":"print","time":20912}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:56.125221: [LangchainWrapper] Successfully parsed tool call: failing_tool","type":"print","time":20912}
{"testID":3,"messageType":"print","message":"SEVERE: 2025-06-25 23:47:56.127974: [LangchainWrapper] Error calling tool failing_tool: Exception: Tool intentionally failed","type":"print","time":20914}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:56.789871: [LangchainWrapper] Attempting to parse tool call from: \"TOOL_CALL: {\"name\": \"working_tool\", \"args\": {}}\"","type":"print","time":21577}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:56.790205: [LangchainWrapper] Extracted JSON string: \"{\"name\": \"working_tool\", \"args\": {}}\"","type":"print","time":21577}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:56.790323: [LangchainWrapper] Successfully parsed tool call: working_tool","type":"print","time":21577}
{"testID":3,"messageType":"print","message":"FINE: 2025-06-25 23:47:56.790874: [LangchainWrapper] Tool working_tool executed: {result: success}","type":"print","time":21578}
{"testID":3,"messageType":"print","message":"INFO: 2025-06-25 23:47:58.046044: [LangchainWrapper] Attempting to parse tool call from: \"The first tool attempt resulted in an error as it was designed to fail. However, the second tool, which is functioning properly, returned a successful result. Therefore, the final outcome is a success, as achieved by using the working tool.\"","type":"print","time":22833}
{"testID":15,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":22834}
{"test":{"id":16,"name":"(tearDownAll)","suiteID":0,"groupIDs":[2],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":22836}
{"testID":16,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":22838}
{"success":true,"type":"done","time":22853}
